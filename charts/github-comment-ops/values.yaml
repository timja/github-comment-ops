# Default values for github-comment-ops.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/timja/github-comment-ops
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  # @default -- `{{ .Chart.appVersion }}`
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  # -- Key value pairs for annotations, e.g. `kubernetes.io/tls-acme: "true"`
  annotations: {}
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource limits
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  # -- Enables autoscaling with the HorizontalPodAutoscaler
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Object for node selector, passed through as-is
nodeSelector: {}

# -- List of tolerations, passed through as-is
tolerations: []

# -- Object for node affinity, passed through as-is
affinity: {}

github:
  # -- The app ID for the GitHub app (required)
  app_id:
  # -- The private key for the GitHub app (required)
  app_private_key:
  # -- The webhook secret for the GitHub app (required)
  webhook_secret:
